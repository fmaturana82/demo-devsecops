trigger:
  - main

pool: Azure Pipelines

jobs:
- job: build
  displayName: 'Build'
  steps:
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'package' # Optional
      #options: # Optional
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml' # Required when publishJUnitResults == True
      #testRunTitle: # Optional
      #allowBrokenSymlink: false # Optional. Has effect only when publishJUnitResults == True
      #codeCoverageToolOption: 'None' # Optional. Options: none, cobertura, jaCoCo. Enabling code coverage inserts the `clean` goal into the Maven goals list when Maven runs.
      #codeCoverageClassFilter: # Optional. Comma-separated list of filters to include or exclude classes from collecting code coverage. For example: +:com.*,+:org.*,-:my.app*.*
      #codeCoverageClassFilesDirectories: # Optional | Required for a multi-module project
      #codeCoverageSourceDirectories: # Optional | Required for a multi-module project
      #codeCoverageFailIfEmpty: false # Optional
      javaHomeOption: 'JDKVersion' # Options: jDKVersion, path
      jdkVersionOption: '1.11' # Optional. Options: default, 1.14, 1.13, 1.12, 1.11, 1.10, 1.9, 1.8, 1.7, 1.6
      #jdkDirectory: # Required when javaHomeOption == Path
      jdkArchitectureOption: 'x64' # Optional. Options: x86, x64
      #mavenVersionOption: 'Default' # Options: default, path
      #mavenDirectory: # Required when mavenVersionOption == Path
      #mavenSetM2Home: false # Required when mavenVersionOption == Path
      mavenOptions: '-Xmx1024m' # Optional
      #mavenAuthenticateFeed: false
      #effectivePomSkip: false
      sonarQubeRunAnalysis: false
      sqMavenPluginVersionChoice: 'latest' # Required when sonarQubeRunAnalysis == True# Options: latest, pom
      #checkStyleRunAnalysis: false # Optional
      #pmdRunAnalysis: false # Optional
      #findBugsRunAnalysis: false # Optional

  #- task: Gradle@3
  #  inputs:
  #    gradleWrapperFile: 'gradlew'
  #    tasks: 'build'
  #    publishJUnitResults: true
  #    testResultsFiles: '**/TEST-*.xml'
  #    javaHomeOption: 'JDKVersion'
  #    sonarQubeRunAnalysis: false
  #    spotBugsAnalysis: false

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)'
      contents: |
          **/build/libs/demo-devsecops-*.jar
      targetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: appJar
      publishLocation: 'Container'
